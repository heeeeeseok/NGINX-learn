# workflow 이름
name: CI

on:
  push:
    branches: [ main ] # main branch로 push 될 때 실행됩니다.

env:
  S3_BUCKET_NAME: nginx-test-s3-bucket
  CODE_DEPLOY_APPLICATION_NAME: nginx-test
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: nginx-test-group

jobs:
  build:
    name: CI
    # 해당 jobs에서 아래의 steps들이 어떠한 환경에서 실행될 것인지를 지정합니다.
    runs-on: ubuntu-latest

    steps:
      # 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3
        
      # JDK 17 세팅
      - name: Set up JDK 17     
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      # yml 파일 등록
      - name: set yml
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.YML }}" > src/main/resources/application.yml
          find src
          
      # gradlew 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash
        
      # gradle 빌드
      - name: Build with Gradle
        run: ./gradlew build
        shell: bash
        
       # AWS S3에 업로드
      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
            --source .

      # AWS EC2에 Deploy
      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
